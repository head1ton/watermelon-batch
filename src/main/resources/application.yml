spring:
  profiles:
    active: mysql

  batch:
    job:
      names: ${job.name:NONE}

  jpa:
    hibernate:
      #      naming:
      #        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
      #        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    #    show-sql: true
    properties:
      #      hibernate.default_batch_fetch_size: 1000
      hibernate.format_sql: true

logging.level:
  org.hibernate.SQL: debug
  org.hibernate.type: trace

--- # local

spring:
  config:
    activate:
      on-profile: local
  datasource:
    hikari:
      jdbc-url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      username: sa
      password:
      driver-class-name: org.h2.Driver
  #  jpa:
  #    hibernate:
  #      ddl-auto: none
  #    show-sql: true
  batch:
    jdbc:
      initialize-schema: embedded
#      table-prefix: SYSTEM_


--- # mysql

spring:
  config:
    activate:
      on-profile: mysql
  #  datasource:
  #    hikari:
  #      jdbc-url: jdbc:h2:tcp://localhost/~/watermelon
  #      username: sa
  #      password:
  #      driver-class-name: org.h2.Driver
  datasource:
    hikari:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://127.0.0.1:3306/watermelon
      username: testadmin
      password: password
  #    jpa:
  #      hibernate:
  #        ddl-auto: create-drop
  #      show-sql: true
  batch:
    jdbc:
      initialize-schema: always
#      isolation-level-for-create: default